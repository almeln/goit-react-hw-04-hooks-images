{"version":3,"sources":["components/App/App.styled.js","components/Searchbar/SearchBar.styled.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.styled.js","components/ImageGalleryItem/ImageGalleryItem.styled.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","services/photos-api.js","components/Button/Button.styled.js","components/Button/Button.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","components/Modal/Modal.styled.js","components/Modal/Modal.js","components/App/App.js","index.js"],"names":["Container","styled","div","NoNameDiv","SearchBarHeader","header","SearchForm","form","SearchFormButton","button","SearchFormButtonLabel","span","SearchFormInput","input","SearchBar","onSubmit","useState","searchName","setSearchName","event","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","toLowerCase","ImageGalleryList","ul","ImageGalleryListItem","li","ImageGalleryItemImage","img","ImageGalleryItem","src","alt","ImageGallery","photos","onSelect","map","id","largeImageURL","tags","webformatURL","onClick","BASE_URL","API_KEY","currentPage","a","parameters","url","axios","get","response","data","LoadMoreBtn","Button","className","Spinner","PhotosLoader","color","height","width","timeout","Overlay","ModalWindow","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","console","log","createPortal","target","App","selectedPhoto","setSelectedPhoto","selectedAlt","setSelectedAlt","setPhotos","setError","status","setStatus","page","setPage","fetchPhotos","then","hits","length","newPhotos","scroll","handleFormSubmit","searchInput","scrollTo","top","documentElement","scrollHeight","behavior","position","imageURL","description","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0fca94c4.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n`;\n\nexport const NoNameDiv = styled.div`\n  text-align: center;\n`;\n","import styled from '@emotion/styled';\n\nexport const SearchBarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  SearchBarHeader,\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './SearchBar.styled';\n\nimport { ImSearch } from 'react-icons/im';\nimport toast from 'react-hot-toast';\n\nexport default function SearchBar({ onSubmit }) {\n  const [searchName, setSearchName] = useState('');\n\n  const handleNameChange = (event) => {\n    setSearchName(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Проверка на пустоту\n    if (searchName.trim() === '') {\n      return toast.error('Enter search name !');\n    };\n\n    // В форму передали сабмит\n    onSubmit(searchName);\n\n    setSearchName('');\n  };\n\n  return (\n    <SearchBarHeader>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\">\n          <ImSearch />\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n        </SearchFormButton>\n\n        <SearchFormInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          name=\"searchName\"\n          value={searchName}\n          onChange={handleNameChange}\n        />\n      </SearchForm>\n    </SearchBarHeader>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n// class SearchBar2 extends Component {\n//   state = {\n//     searchName: '',\n//   };\n\n//   handleNameChange = event => {\n//     this.setState({ searchName: event.currentTarget.value.toLowerCase() });\n//   };\n\n//   handleSubmit = event => {\n//     const { searchName } = this.state;\n\n//     event.preventDefault();\n\n//     // Проверка на пустоту\n//     if (searchName.trim() === '') {\n//       return toast.error('Enter search name !');\n//     }\n\n//     // В форму передали сабмит\n//     this.props.onSubmit(searchName);\n\n//     this.setState({ searchName: '' });\n//   };\n\n//   render() {\n//     const { handleSubmit, handleNameChange } = this;\n//     const { searchName } = this.state;\n\n//     return (\n//       <SearchBarHeader>\n//         <SearchForm onSubmit={handleSubmit}>\n//           <SearchFormButton type=\"submit\">\n//             <ImSearch />\n//             <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n//           </SearchFormButton>\n\n//           <SearchFormInput\n//             type=\"text\"\n//             autoComplete=\"off\"\n//             autoFocus\n//             placeholder=\"Search images and photos\"\n//             name=\"searchName\"\n//             value={searchName}\n//             onChange={handleNameChange}\n//           />\n//         </SearchForm>\n//       </SearchBarHeader>\n//     );\n//   }\n// }\n\n// export default SearchBar;\n","import styled from '@emotion/styled';\n\nexport const ImageGalleryList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ImageGalleryListItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n","import styled from '@emotion/styled';\n\nexport const ImageGalleryItemImage = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ImageGalleryItemImage } from './ImageGalleryItem.styled';\n\nconst ImageGalleryItem = ({ src, alt }) => (\n  <ImageGalleryItemImage src={src} alt={alt} />\n);\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport { ImageGalleryList, ImageGalleryListItem } from './ImageGallery.styled';\n\nimport ImageGalleryItem from 'components/ImageGalleryItem';\n\nconst ImageGallery = ({ photos, onSelect }) => {\n  return (\n    <>\n      <ImageGalleryList>\n        {photos.map(({ id, largeImageURL, tags, webformatURL }) => (\n          <ImageGalleryListItem\n            key={id}\n            onClick={() => onSelect(largeImageURL, tags)}\n          >\n            <ImageGalleryItem src={webformatURL} alt={tags} />\n          </ImageGalleryListItem>\n        ))}\n      </ImageGalleryList>\n    </>\n  );\n};\n\nImageGallery.propTypes = {\n  photos: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n\n// class OldImageGallery extends Component {\n//   state = {\n//     photos: null,\n//     // loading: false,\n//     error: null,\n//     status: 'idle',\n//     page: 1,\n//   };\n\n//   // Когда компонент обновляется (обновляются или пропсы или стейт)\n//   async componentDidUpdate(prevProps, prevState) {\n//     const prevName = prevProps.searchName;\n//     const nextName = this.props.searchName;\n//     const prevPage = prevState.page;\n//     const nextPage = this.state.page;\n//     const prevPhotos = this.state.photos;\n//     // Внутри компонента componentDidUpdate всегда обязатлеьно должна быть проверка, чтобы он не зациклился\n//     if (prevName !== nextName) {\n//       try {\n//         console.log('Изменилось имя поиска');\n//         console.log('prevName', prevName);\n//         console.log('nextName', nextName);\n\n//         this.setState({ status: 'pending', page: 1 });\n\n//         await fetchPhotos(nextName, nextPage).then(photos =>\n//           this.setState({ photos: photos.hits, status: 'resolved' }),\n//         );\n//       } catch (error) {\n//         this.setState({ error, status: 'rejected' });\n//       }\n//       if (this.state.photos.length === 0) {\n//         return toast.error('Ooops... There are no photos on this result!');\n//       }\n//     }\n\n//     if (prevPage !== nextPage) {\n//       try {\n//         console.log('Изменилась страница');\n//         console.log('prevPage', prevPage);\n//         console.log('nextPage', nextPage);\n\n//         this.setState({ status: 'pending' });\n\n//         await fetchPhotos(nextName, nextPage).then(photos =>\n//           this.setState({\n//             photos: [...prevPhotos, ...photos.hits],\n//             status: 'resolved',\n//           }),\n//         );\n//       } catch (error) {\n//         this.setState({ error, status: 'rejected' });\n//       }\n//     }\n\n//     window.scrollTo({\n//       top: document.documentElement.scrollHeight,\n//       behavior: 'smooth',\n//     });\n//   }\n\n//   togleLoadMoreBtn = () => {\n//     console.log('btn-click');\n\n//     this.setState({\n//       page: this.state.page + 1,\n//     });\n\n//     window.scrollTo({\n//       top: document.documentElement.scrollHeight,\n//       behavior: 'smooth',\n//     });\n//   };\n\n//   render() {\n//     const { photos, status } = this.state;\n\n//     // State-машина\n//     if (status === 'idle') {\n//       return <NoNameDiv>Enter search name</NoNameDiv>;\n//     }\n\n//     if (status === 'pending') {\n//       return <PhotosLoader />;\n//     }\n\n//     if (status === 'rejected') {\n//       //   return <p>{error.message}</p>;\n//       return toast.error('Ooops... There are no photos on this result!');\n//     }\n\n//     if (status === 'resolved') {\n//       const { togleLoadMoreBtn } = this;\n\n//       return (\n//         <>\n//           <ImageGalleryList>\n//             {photos.map(({ id, largeImageURL, tags, webformatURL }) => (\n//               <ImageGalleryListItem\n//                 key={id}\n//                 onClick={() => this.props.onSelect(largeImageURL, tags)}\n//               >\n//                 <ImageGalleryItem src={webformatURL} alt={tags} />\n//               </ImageGalleryListItem>\n//             ))}\n//           </ImageGalleryList>\n//           {photos.length >= 12 && <Button onClick={togleLoadMoreBtn}></Button>}\n//         </>\n//       );\n//     }\n//   }\n// }\n\n// export { OldImageGallery } ;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '22659377-0dd97b237805bca735c774318';\n\nexport async function fetchPhotos(searchName, currentPage) {\n  const parameters = `?q=${searchName}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  const url = BASE_URL + parameters;\n\n  // return fetch(\n  //   `https://pixabay.com/api/?q=${searchName}&page=1&key=22659377-0dd97b237805bca735c774318&image_type=photo&orientation=horizontal&per_page=12`,\n  // ).then(response => {\n  //   if (response.ok) {\n  //     return response.json();\n  //   }\n\n  //   return Promise.reject(new Error(`No result with name ${searchName}`));\n  // });\n\n  // AXIOS\n  const response = await axios.get(url);\n\n  return response.data;\n}\n","import styled from '@emotion/styled';\n\nexport const LoadMoreBtn = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  max-width: 250px;\n  margin-left: auto;\n  margin-right: auto;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LoadMoreBtn } from './Button.styled';\n\nconst Button = ({ onClick }) => (\n  <LoadMoreBtn type=\"button\" className=\"Button\" onClick={onClick}>\n    Load more\n  </LoadMoreBtn>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const Spinner = styled.div`\n  text-align: center;\n`;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { Spinner } from './Loader.styled';\n\nconst PhotosLoader = () => (\n  <Spinner>\n    <Loader\n      type=\"Circles\"\n      color=\"#00BFFF\"\n      height={80}\n      width={80}\n      timeout={3000} //3 secs\n    />\n  </Spinner>\n);\n\nexport default PhotosLoader;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalWindow } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, children }) {\n\n  useEffect(() => {\n    // Вешаем слушателя событий\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      // Чистим слушатель событий\n      window.removeEventListener('keydown', handleKeyDown);\n    }\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      console.log('Нажали ESC, нужно закрыть модалку');\n      onClose();\n    };\n  };\n\n  const handleOverlayClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  }\n\n  return createPortal(\n    <Overlay onClick={handleOverlayClick}>\n      <ModalWindow>{children}</ModalWindow>\n    </Overlay>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\n// class Modal2 extends Component {\n//   // Слушатель событий на Виндовс можно повесить в этом методе\n//   componentDidMount() {\n//     console.log('ModalComponentDidMount');\n//     // Вешаем слушателя событий\n//     window.addEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   componentWillUnmount() {\n//     console.log('ModalComponentWillUnmount');\n//     // Чистим слушатель событий\n//     window.removeEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   handleKeyDown = e => {\n//     if (e.code === 'Escape') {\n//       console.log('Нажали ESC, нужно закрыть модалку');\n//       this.props.onClose();\n//     }\n//   };\n\n//   handleOverlayClick = e => {\n//     console.log('Click on overlay');\n\n//     console.log('currentTarget: ', e.currentTarget);\n//     console.log('target: ', e.target);\n\n//     if (e.currentTarget === e.target) {\n//       this.props.onClose();\n//     }\n//   };\n\n//   render() {\n//     const { handleOverlayClick } = this;\n\n//     return createPortal(\n//       <Overlay onClick={handleOverlayClick}>\n//         <ModalWindow>{this.props.children}</ModalWindow>\n//       </Overlay>,\n//       modalRoot,\n//     );\n//   }\n// }\n\n// export default Modal;\n","import React, { useState, useEffect } from 'react';\nimport { Toaster, toast } from 'react-hot-toast';\n// import { ToastContainer } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\nimport { Container, NoNameDiv } from './App.styled';\nimport Searchbar from 'components/Searchbar';\nimport ImageGallery from 'components/ImageGallery';\nimport { fetchPhotos } from '../../services/photos-api';\n\nimport Button from 'components/Button';\nimport PhotosLoader from 'components/Loader/Loader';\n\nimport Modal from 'components/Modal';\n\nexport default function App() {\n  const [searchName, setSearchName] = useState('');\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\n  const [selectedAlt, setSelectedAlt] = useState(null);\n  const [photos, setPhotos] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if(!searchName) {\n      return;\n    }\n\n    try {\n      setStatus('pending');\n      fetchPhotos(searchName, page)\n      .then(data => {\n        if (data.hits.length === 0) {\n          toast.error('Ooops... There are no photos on this result!');\n          setStatus('rejected');\n          return;\n        };\n\n        let newPhotos = [...photos, ...data.hits];\n        setPhotos(newPhotos);\n        setStatus('resolved');\n        scroll();\n      })\n    } catch {\n      setError();\n      setStatus('rejecteed');\n    }\n  }, [searchName, page])\n\n  const handleFormSubmit = (searchInput) => {\n    if(searchName === searchInput) {\n      return;\n    };\n    \n    setSearchName(searchInput);\n    setPage(1);\n    setPhotos([]);\n  } \n\n  // Для выбора картинки\n  const handleSelectedPhoto = (imageURL, description) => {\n    setSelectedPhoto(imageURL);\n    setSelectedAlt(description);\n  };\n\n  const togleLoadMoreBtn = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const closeModal = () => {\n    setSelectedPhoto(null);\n    setSelectedAlt(null);\n  }\n\n  const scroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  // State-машина\n  if (status === 'idle') {\n    return (\n      <>\n        <Searchbar onSubmit={handleFormSubmit}></Searchbar>\n        <NoNameDiv>Enter search name</NoNameDiv>;\n      </>\n    );\n  }\n\n  if (status === 'pending') {\n    return (\n      <>\n        <Searchbar onSubmit={handleFormSubmit}></Searchbar>\n        <PhotosLoader />;\n      </>\n    );\n  }\n\n  if (status === 'rejected') {\n    console.log(error);\n    return (\n      <>\n        <Searchbar onSubmit={handleFormSubmit}></Searchbar>\n        <Toaster position=\"top-right\" />\n      </>\n    );\n  }\n\n  if (status === 'resolved') {\n    return (\n      <Container>\n        <Searchbar onSubmit={handleFormSubmit}></Searchbar>\n        <ImageGallery\n          searchName={searchName}\n          onSelect={handleSelectedPhoto}\n          photos={photos}\n        />\n        {photos.length >= 12 && <Button onClick={togleLoadMoreBtn}></Button>}\n\n        {selectedPhoto && (\n          <Modal onClose={closeModal}>\n            <img src={selectedPhoto} alt={selectedAlt} />\n          </Modal>\n        )}\n        <Toaster position=\"top-right\" />\n      </Container>\n    );\n  }\n}\n\n// class App1 extends Component {\n//   state = {\n//     searchName: '',\n//     selectedPhoto: null,\n//     selectedAlt: null,\n//     photos: [],\n//     error: null,\n//     status: 'idle',\n//     page: 1,\n//   };\n\n//   async componentDidUpdate(prevProps, prevState) {\n//     const prevName = prevState.searchName;\n//     const nextName = this.state.searchName;\n//     const prevPage = prevState.page;\n//     const nextPage = this.state.page;\n//     const prevPhotos = this.state.photos;\n\n//     // Внутри компонента componentDidUpdate всегда обязатлеьно должна быть проверка, чтобы он не зациклился\n//     if (prevName !== nextName) {\n//       try {\n//         console.log('Изменилось имя поиска');\n//         console.log('prevName', prevName);\n//         console.log('nextName', nextName);\n\n//         this.setState({ status: 'pending', page: 1 });\n\n//         await fetchPhotos(nextName, nextPage).then(photos =>\n//           this.setState({ photos: photos.hits, status: 'resolved' }),\n//         );\n//       } catch (error) {\n//         this.setState({ error, status: 'rejected' });\n//       }\n//       if (this.state.photos.length === 0) {\n//         return toast.error('Ooops... There are no photos on this result!');\n//       }\n//     }\n\n//     if (prevPage !== nextPage) {\n//       try {\n//         console.log('Изменилась страница');\n//         console.log('prevPage', prevPage);\n//         console.log('nextPage', nextPage);\n\n//         this.setState({ status: 'pending' });\n\n//         await fetchPhotos(nextName, nextPage).then(photos =>\n//           this.setState({\n//             photos: [...prevPhotos, ...photos.hits],\n//             status: 'resolved',\n//           }),\n//         );\n//       } catch (error) {\n//         this.setState({ error, status: 'rejected' });\n//       }\n//     }\n\n//     window.scrollTo({\n//       top: document.documentElement.scrollHeight,\n//       behavior: 'smooth',\n//     });\n//   }\n\n//   handleFormSubmit = searchName => {\n//     console.log(searchName);\n//     // При сабмите формы записываем значение инпута из Серчбар в Апп\n//     this.setState({ searchName });\n//   };\n\n//   // Для выбора картинки\n//   handleSelectedPhoto = (imageURL, description) =>\n//     this.setState({\n//       selectedPhoto: imageURL,\n//       selectedAlt: description,\n//     });\n\n//   togleLoadMoreBtn = () => {\n//     console.log('btn-click');\n\n//     this.setState({\n//       page: this.state.page + 1,\n//     });\n\n//     window.scrollTo({\n//       top: document.documentElement.scrollHeight,\n//       behavior: 'smooth',\n//     });\n//   };\n\n//   closeModal = () =>\n//     this.setState({\n//       selectedPhoto: null,\n//       selectedAlt: null,\n//     });\n\n//   render() {\n//     const {\n//       handleFormSubmit,\n//       handleSelectedPhoto,\n//       closeModal,\n//       togleLoadMoreBtn,\n//     } = this;\n//     const { searchName, selectedPhoto, selectedAlt, photos, status } =\n//       this.state;\n\n//     // State-машина\n//     if (status === 'idle') {\n//       return (\n//         <>\n//           <Searchbar onSubmit={handleFormSubmit}></Searchbar>\n//           <NoNameDiv>Enter search name</NoNameDiv>;\n//         </>\n//       );\n//     }\n\n//     if (status === 'pending') {\n//       return (\n//         <>\n//           <Searchbar onSubmit={handleFormSubmit}></Searchbar>\n//           <PhotosLoader />;\n//         </>\n//       );\n//     }\n\n//     if (status === 'rejected') {\n//       //   return <p>{error.message}</p>;\n//       return (\n//         <>\n//           <Searchbar onSubmit={handleFormSubmit}></Searchbar>\n//           toast.error('Ooops... There are no photos on this result!');\n//         </>\n//       );\n//     }\n\n//     if (status === 'resolved') {\n//       return (\n//         <Container>\n//           <Searchbar onSubmit={handleFormSubmit}></Searchbar>\n//           {/* <ToastContainer autoClose={3000} /> */}\n//           <ImageGallery\n//             searchName={searchName}\n//             onSelect={handleSelectedPhoto}\n//             photos={photos}\n//           />\n//           {photos.length >= 12 && <Button onClick={togleLoadMoreBtn}></Button>}\n\n//           {this.state.selectedPhoto && (\n//             <Modal onClose={closeModal}>\n//               <img src={selectedPhoto} alt={selectedAlt} />\n//             </Modal>\n//           )}\n//           <Toaster position=\"top-right\" />\n//         </Container>\n//       );\n//     }\n//   }\n// }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}